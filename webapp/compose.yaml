
services:
    mqtt-broker:
        build:
            context: "./"
            dockerfile: "./mqtt-broker/Dockerfile"
            target: ${TARGET}
            args:
                MQTT_BROKER_CRT: ${MQTT_BROKER_CRT}
                MQTT_BROKER_KEY: ${MQTT_BROKER_KEY}
                MQTT_ADMIN_USERNAME: ${MQTT_ADMIN_USERNAME}
                MQTT_ADMIN_PASSWORD: ${MQTT_ADMIN_PASSWORD}
        ports:
            - ${MQTT_BROKER_PORT_PUBLIC}:${MQTT_BROKER_PORT}
    reverse-proxy:
        build:
            context: "./"
            dockerfile: "./reverse-proxy/Dockerfile"
            target: ${TARGET}
            args:
                REVERSE_PROXY_CRT: ${REVERSE_PROXY_CRT}
                REVERSE_PROXY_KEY: ${REVERSE_PROXY_KEY}
        ports:
            - ${REVERSE_PROXY_PORT_PUBLIC}:${REVERSE_PROXY_PORT}
        depends_on:
            - backend
    backend:
        build:
            context: "./"
            dockerfile: "./backend/Dockerfile"
            target: ${TARGET}
            args:
                CA_BUNDLE: ${CA_BUNDLE}
        env_file: .env
        depends_on:
            database:
                condition: service_healthy
    database:
        image: mariadb
        environment:
            MARIADB_USER: ${DATABASE_USERNAME}
            MARIADB_PASSWORD: ${DATABASE_PASSWORD}
            MARIADB_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
            MARIADB_DATABASE: esp_manager
        healthcheck:
            test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 3